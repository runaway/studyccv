---
layout: page
lib: ccv
slug: ccv-swt
status: publish
title: lib/ccv_swt.c
desc: stroke width transform
categories:
- lib
---

ccv\_swt
--------

	void ccv_swt(ccv_dense_matrix_t *a, ccv_dense_matrix_t **b, int type, ccv_swt_param_t params)

Compute the Stroke-Width-Transform image.

 * **a**: The input matrix.
 * **b**: The output matrix.
 * **type**: The type of the output matrix, if 0, ccv will default to CCV\_32S \| CCV\_C1.
 * **params**: A **ccv\_swt\_param\_t** structure that defines various aspect of the SWT function.

ccv\_swt\_param\_t
------------------

Canny parameters

 * **high\_thresh**: Parameters for [Canny edge detector](/lib/ccv-classic).
 * **low\_thresh**: Parameters for [Canny edge detector](/lib/ccv-classic).
 * **size**: Parameters for [Canny edge detector](/lib/ccv-classic).

Geometry filtering parameters

 * **aspect\_ratio**: The maximum aspect ratio for a letter.
 * **max\_height**: The maximum height for a letter.
 * **min\_area**: The minimum occupied area for a letter.
 * **min\_height**: The minimum height for a letter.
 * **std\_ratio**: The inner-class standard derivation when grouping letters.

Grouping parameters

 * **distance\_ratio**: The allowable distance variance when grouping letters.
 * **elongate\_ratio**: The allowable elongate variance when grouping letters.
 * **height\_ratio**: The allowable height variance when grouping letters.
 * **intensity\_thresh**: The allowable intensity variance when grouping letters.
 * **intersect\_ratio**: The allowable intersect variance when grouping letters.
 * **letter\_thresh**: The allowable letter threshold.
 * **thickness\_ratio**: The allowable thickness variance when grouping letters.

Break textline into words

 * **breakdown**: If breakdown text line into words.
 * **breakdown\_ratio**: Apply [OSTU](/lib/ccv-classic) and if inter-class variance above the threshold, it will be break down into words.
 * **direction**: SWT direction. (black to white or white to black).
 * **interval**: Intervals for scale invariant option.
 * **min\_neighbors**: Minimal neighbors to make a detection valid, this is for scale-invariant version.
 * **same\_word\_thresh**: Overlapping more than 0.1 of the bigger one (0), and 0.9 of the smaller one (1)
 * **scale\_invariant**: Enable scale invariant swt (to scale to different sizes and then combine the results)

ccv\_swt\_detect\_words
-----------------------

	ccv_swt_detect_words(ccv_dense_matrix_t *a, ccv_swt_param_t params)

Return array of regions that are potentially text area.

 * **a**: The input matrix.
 * **params**: A **ccv\_swt\_param\_t** structure that defines various aspect of the SWT function.

**return**: A **ccv\_array\_t** of **ccv\_comp\_t** with detection results.
